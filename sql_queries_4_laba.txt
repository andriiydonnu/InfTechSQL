1.
WITH MaxSale
AS
(
    select top 1 *
    from SalesLT.SalesOrderHeader
    order by SalesLT.SalesOrderHeader.TotalDue desc
)
select * from MaxSale
GO

2.
DECLARE @somevar as INT;
SET @somevar = (select top 1 [SalesOrderHeader].[SalesOrderID]
                from SalesLT.SalesOrderHeader
                order by SalesLT.SalesOrderHeader.TotalDue desc
                )
SELECT @somevar as MaxTotalDueId

3.
SET DATEFORMAT YMD;

WITH DateSeries(d1,d2)
AS (
SELECT CAST('2012-01-01' AS DATE) as d1, EOMONTH(CAST('2012-01-01' AS DATE)) as d2
UNION ALL
SELECT DATEADD(mm, 1, d1), EOMONTH(DATEADD(mm,1,d1))
FROM DateSeries
WHERE d1<DATEADD(mm, -1, DATEADD(yy, 1, CAST('2012-01-01' AS DATE)))
)
SELECT d.d1 AS DATE_START, d.d2 AS DATE_END, a.CITY, SUM(h.TotalDue) AS SUM
FROM DateSeries d, SalesLT.SalesOrderHeader h
INNER JOIN SalesLT.Address a ON h.BillToAddressID=a.AddressID
WHERE h.OrderDate BETWEEN d.d1 AND d.d2
GROUP BY d.d1, d.d2, a.City

4.
CREATE PROCEDURE SalesLT_023
     @DueDate_2 DATE, @DueDate_3 DATE
 AS
 BEGIN
    SELECT a.ShipMethod, a.PurchaseOrderNumber, a.DueDate, a.TotalDue
    FROM SalesLT.SalesOrderHeader a
    WHERE TotalDue IN(SELECT max(b.TotalDue) FROM SalesLT.SalesOrderHeader b) and
  DueDate BETWEEN  @DueDate_2 and @DueDate_3
    GROUP BY a.ShipMethod, a.PurchaseOrderNumber, a.DueDate, a.TotalDue
 END

 EXEC SalesLT_002 @DueDate_2 = '2000-01-01', @DueDate_3 = '2018-12-31';
GO
